import java.awt.Canvas;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Color;
import java.awt.Component;
import java.awt.Component;

public class EggTimerCanvas extends Canvas {
    EggTimerModel emodel;

    public EggTimerCanvas(EggTimerModel emodel) {
        this.emodel = emodel;
        setPreferredSize(new Dimension(320, 320));
    }

    //public void setPreferredSize(Dimension d) {
    //nicht überchreiben
    //}

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        //g.drawOval(10, 10, 300, 300);
        g.setColor(Color.RED);
        g.fillOval(10, 10, 300, 300);
        g.setColor(Color.GREEN);
        // nicht g.fillArc(10, 10, 300, 300, 90,(int) -emodel.getElapsedPart()*360);
        // Achtung: Cast-Operator bindet stärker als Multiplikationsoperator
        int arcAngle = (int) (-emodel.getElapsedPart() * 360);
        g.fillArc(10, 10, 300, 300, 90, arcAngle);
        System.out.println(arcAngle);

        /*
         * Ok, also width und height sind aber 300 Pixel. Jetzt muss ich noch
         * rausfinden, was x und y sind:
         * 
         * x=320/2-radius y=320/2-radius
         * 
         * Der Radius ist 150, also sind x=160-150=10 y=160-150=10
         */
        // drawOval(diffRadius oben, diffRadius Seite, Durchmesser, Durchmesser)
        // g.fillArc(10,10,300,300,90,(int)e.getElapsedPart()*360);
        //
        // g.fillArc(diffRadius oben, diffRadius Seite, Durchmesser, Durchmesser, Startgrad,
        // Spannweitengrad 4/60 *360=24);
        // grüne 4 sekunden
        // Graphics=Zeichenstiftfunktion/Stift
    }
}
// S.316 3 Punkte um mit Graphics zu zeichnen, S.306 zum Neuzeichnen.
